// <auto-generated />
using System;
using Cinema_Api.src.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema_Api.Migrations
{
    [DbContext(typeof(MasterContext))]
    partial class MasterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Cinema_Api.src.Models.Ator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DataNasc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ator");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.Diretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataNasc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Diretor");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiretorId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("NotaIMDB")
                        .HasColumnType("REAL");

                    b.Property<float>("Preco")
                        .HasColumnType("Decimal");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiretorId");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.FilmeAtor", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Papel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FilmeId", "AtorId");

                    b.HasIndex("AtorId");

                    b.ToTable("FilmeAtor");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.FilmeGenero", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmeId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("FilmeGenero");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.Filme", b =>
                {
                    b.HasOne("Cinema_Api.src.Models.Diretor", "Diretor")
                        .WithMany()
                        .HasForeignKey("DiretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diretor");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.FilmeAtor", b =>
                {
                    b.HasOne("Cinema_Api.src.Models.Ator", "Ator")
                        .WithMany()
                        .HasForeignKey("AtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema_Api.src.Models.Filme", "Filme")
                        .WithMany("FilmesAtores")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ator");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.FilmeGenero", b =>
                {
                    b.HasOne("Cinema_Api.src.Models.Filme", "Filme")
                        .WithMany("FilmesGeneros")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema_Api.src.Models.Genero", "Genero")
                        .WithMany("FilmesGeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.Filme", b =>
                {
                    b.Navigation("FilmesAtores");

                    b.Navigation("FilmesGeneros");
                });

            modelBuilder.Entity("Cinema_Api.src.Models.Genero", b =>
                {
                    b.Navigation("FilmesGeneros");
                });
#pragma warning restore 612, 618
        }
    }
}
